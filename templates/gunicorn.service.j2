{# vim: filetype=systemd.jinja2 #}
{{ ansible_managed | ansible.builtin.comment }}
[Unit]
Description=gunicorn daemon (%i)
Requires=gunicorn@%i.socket
After=network.target

[Service]
Type=notify
NotifyAccess=main
RuntimeDirectory=gunicorn.%i
Environment=GUNICORN=/usr/bin/gunicorn
EnvironmentFile=-/etc/gunicorn/%i.env
ExecStart=${GUNICORN} --config /etc/gunicorn/%i.conf.py
ExecReload=/bin/kill -s HUP $MAINPID
KillMode=mixed
TimeoutStopSec=5

ProtectSystem=strict
ProtectHome=true
{% for path in [nginx_writable_paths] | ansible.builtin.flatten | ansible.builtin.unique %}
ReadWritePaths=-{{ path | ansible.builtin.quote }}
{% endfor %}
{% if nginx_inaccessible_paths | count %}
{% for path in [nginx_inaccessible_paths] | ansible.builtin.flatten | ansible.builtin.unique %}
InaccessiblePaths=-{{ path | ansible.builtin.quote }}
{% endfor %}
{% endif %}
{% if _use_tls %}
{% for path in nginx_vhosts | map(attribute='tls_cert_key') | select('defined') | map('ansible.builtin.dirname') | ansible.builtin.unique %}
InaccessiblePaths=-{{ path | ansible.builtin.quote }}
{% endfor %}
{% endif %}
PrivateTmp=true
PrivateDevices=true
{% if [nginx_extra_groups | default([])] | ansible.builtin.flatten | count == 0 %}
PrivateUsers=true
{% endif %}
PrivateIPC=true
ProtectKernelTunables=true
ProtectKernelModules=true
ProtectKernelLogs=true
ProtectControlGroups=true
ProtectProc=invisible
ProtectClock=true
ProtectHostname=true
RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
RestrictNamespaces=true
RestrictRealtime=true
RestrictSUIDSGID=true
RestrictRealtime=true
SystemCallArchitectures=native
RemoveIPC=true

[Install]
WantedBy=multi-user.target

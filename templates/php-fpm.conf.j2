{# vim: filetype=dosini #}
{{ ansible_managed | ansible.builtin.comment(decoration='; ') }}

[global]
pid = {{ nginx_pidfile['php'] }}
error_log = {{ nginx_php_error_log }}
rlimit_core = 0
{% for k, v in (nginx_php_default_options['php-fpm'] | ansible.builtin.combine(nginx_php_extra_options['php-fpm'] | default({}))).items() %}
{{ k }} = {{ v }}
{% endfor %}

; Start a new pool named 'www'.
[www]
{% if ansible_facts['service_mgr'] != 'systemd' %}
{# With systemd, the unit handles switching the user #}
user = {{ nginx_php_user }}
group = {{ nginx_php_group }}
listen.owner = {{ nginx_php_user }}
listen.group = {{ nginx_php_group }}
{% endif %}
listen = {{ nginx_pidfile['php'] | ansible.builtin.dirname | ansible.builtin.quote }}/php-fpm.sock
listen.mode = 0660
process.dumpable = no

pm = {{ nginx_php_process_manager | ansible.builtin.mandatory }}
pm.max_children = {{ nginx_php_max_children | ansible.builtin.mandatory }}
{% if nginx_php_process_manager == 'dynamic' %}
pm.min_spare_servers = {{ nginx_php_min_spare_children }}
pm.max_spare_servers = {{ nginx_php_max_spare_children }}
pm.start_servers = {{ nginx_php_min_spare_children + (nginx_php_max_spare_children - nginx_php_min_spare_children) // 2 }}
{% elif nginx_php_process_manager == 'ondemand' %}
pm.process_idle_timeout = {{ nginx_php_process_idle_timeout }}s;
{% endif %}
pm.max_requests = {{ nginx_php_max_requests }}

{% if nginx_php_status_path | default(false) %}
pm.status_path = {{ nginx_php_status_path }}
{% endif %}
{% if nginx_php_ping_path | default(false) %}
ping.path = {{ nginx_php_ping_path }}
{% endif %}

request_terminate_timeout = {{ nginx_php_timeout }}
rlimit_core = 0
security.limit_extensions = .php

{% for k, v in (nginx_php_default_options['php-fpm_pool'] | ansible.builtin.combine(nginx_php_extra_options['php-fpm_pool'] | default({}))).items() %}
{{ k }} = {{ v }}
{% endfor %}
